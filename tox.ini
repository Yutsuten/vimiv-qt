[tox]
envlist = pyqt-cov,no_optionals,lint,packaging,mypy

# Standard test suite using pytest
[testenv]
setenv =
   cov: PYTEST_ADDOPTS= --cov {envsitepackagesdir}/vimiv --cov-report xml:{toxinidir}/coverage/coverage.xml --cov-report html:{toxinidir}/coverage/html
passenv = PYTHONPATH CI USER HOME XDG_*
basepython = {env:PYTHON:python3}
deps =
    -r{toxinidir}/misc/requirements/requirements_tests.txt
    -r{toxinidir}/misc/requirements/requirements_optional.txt
    pyqt: -r{toxinidir}/misc/requirements/requirements.txt
    pyqt59: PyQt5==5.9.2
    pyqt510: PyQt5==5.10.1
    pyqt511: PyQt5==5.11.3
    pyqt512: PyQt5==5.12.3
    pyqt513: PyQt5==5.13.2
    cov: -r{toxinidir}/misc/requirements/requirements_cov.txt

commands_pre = {envpython} scripts/maybe_build_cextension.py
commands = pytest -m "not no_optional" {posargs}

# Test suite without optional dependencies
[testenv:no_optionals]
deps =
    -r{toxinidir}/misc/requirements/requirements.txt
    -r{toxinidir}/misc/requirements/requirements_tests.txt

commands = pytest -m "not optional" {posargs}

# Linters and checkers for the source code
[testenv:lint]
ignore_errors = true
deps =
    -r{toxinidir}/misc/requirements/requirements.txt
    -r{toxinidir}/misc/requirements/requirements_lint.txt
commands =
    pylint vimiv scripts/pylint_checkers
    pycodestyle vimiv tests scripts/pylint_checkers
    pydocstyle vimiv scripts/pylint_checkers

# Check the packaging for best-practices and completeness
[testenv:packaging]
ignore_errors = true
deps =
    -r{toxinidir}/misc/requirements/requirements_packaging.txt
commands =
    pyroma .
    check-manifest

# Check for errors with type annotations
[testenv:mypy]
passenv = PYTHONPATH CI TERM
deps =
    -r{toxinidir}/misc/requirements/requirements.txt
    -r{toxinidir}/misc/requirements/requirements_optional.txt
    -r{toxinidir}/misc/requirements/requirements_mypy.txt
commands = mypy vimiv

# Create a virtual environment to run the development version
[testenv:mkvenv]
envdir = {toxinidir}/.venv
usedevelop = true
deps =
    -r{toxinidir}/misc/requirements/requirements.txt
    -r{toxinidir}/misc/requirements/requirements_optional.txt
commands = {envpython} -c ""

# Create a virtual environment to build the documentation
[testenv:docs]
deps =
    -r{toxinidir}/misc/requirements/requirements_docs.txt
commands = 
    {toxinidir}/scripts/src2rst.py
    sphinx-build -b html docs {posargs}

# Settings for pycodestyle
[pycodestyle]
max-line-length = 88
# E203: whitespace before ':' wrongly raised for slicing
# W503: line break before binary operator does not conform to pep8
ignore = E203,W503

# Settings for check-manifest
[check-manifest]
ignore =
    .*
    pytest.ini
    tox.ini
    mypy.ini
    scripts
    scripts/*
    tests
    tests/*
