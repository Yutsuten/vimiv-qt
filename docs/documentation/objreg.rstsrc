.. This file was autogenerated by scripts/src2rst.py.
   The extension .rstsrc is used to avoid sphinx copying this file directly.
   Do not edit by hand.



The object registry in ``vimiv.utils.objreg`` is a storage system for
long-lived objects. These objects are stored and identified using their type.
Therefore every stored object must be unique in its type and only one instance
of each type can be stored. It is mainly used by commands as well as statusbar
modules to retrieve the ``self`` argument for methods that require an instance
of the class.

To register a new class in the object registry, the ``register`` decorator can
be used as following::

    class MyLongLivedClass:

        @objreg.register
        def __init__(self):
            ...

The class is then stored in the object registry once the first instance was
created. To retrieve the class, the ``get`` function can be used::

    my_instance = objreg.get(MyLongLivedClass)